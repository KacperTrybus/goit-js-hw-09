{"mappings":"YAAA,IAAMA,EAAaC,SAASC,cAAc,qBACpCC,EAAYF,SAASC,cAAc,oBACnCE,EAAcH,SAASC,cAAc,sBACrCG,EAAMJ,SAASC,cAAc,UAGnC,SAASI,EAAcC,EAAUC,GAC/B,IAAMC,EAAgBC,KAAKC,SAAW,GACtB,IAAIC,SAAQ,SAACC,EAASC,GAEpCC,YAAW,WACLN,EACFI,EAAQ,CAAEG,SAAAT,EAAUU,MAAAT,IAEpBM,EAAO,CAAEE,SAAAT,EAAUU,MAAAT,G,GAEpBA,E,IAIFU,MAAK,SAAAC,G,IAAGH,EAAQG,EAARH,SAAUC,EAAKE,EAALF,MAEjBG,QAAQC,IAAI,uBAAwCC,OAAfN,EAAS,QAAYM,OAANL,EAAM,M,IAE3DM,OAAM,SAAAJ,G,IAAGH,EAAQG,EAARH,SAAUC,EAAKE,EAALF,MAElBG,QAAQC,IAAI,sBAAqCC,OAAfN,EAAS,QAAYM,OAANL,EAAM,M,IAtBhDhB,SAASC,cAAc,SA0B/BsB,iBAAiB,UAAU,SAAUC,GACxCA,EAAMC,iBACNrB,EAAIsB,aAAa,WAAY,IAQ7B,IANA,IAAMC,EAAkBC,OAAO7B,EAAW8B,OACpCC,EAAiBF,OAAO1B,EAAU2B,OAClCE,EAASH,OAAOzB,EAAY0B,OAE9BG,EAAsB,EAEjBC,EAAI,EAAGA,GAAKF,EAAQE,IAAK,CAEhC5B,EAAc4B,EADON,GAAmBM,EAAI,GAAKH,KAEjDE,IAE4BD,GAC1B3B,EAAI8B,gBAAgB,W","sources":["src/js/03-promises.js"],"sourcesContent":["const firstDelay = document.querySelector('input[name=delay]');\nconst stepDelay = document.querySelector('input[name=step]');\nconst amountInput = document.querySelector('input[name=amount]');\nconst btn = document.querySelector('button');\nconst form = document.querySelector('.form');\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  const promise = new Promise((resolve, reject) => {\n    //nowy promise dla ktorego robi sie funkcja\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n\n  promise // wywoluje promise\n    .then(({ position, delay }) => {\n      //jak resolved\n      console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n    })\n    .catch(({ position, delay }) => {\n      // jak rejected\n      console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n    });\n}\n\nform.addEventListener('submit', function (event) {\n  event.preventDefault();\n  btn.setAttribute('disabled', '');\n\n  const firstDelayValue = Number(firstDelay.value);\n  const stepDelayValue = Number(stepDelay.value);\n  const amount = Number(amountInput.value);\n\n  let createdPromiseCount = 0;\n\n  for (let i = 1; i <= amount; i++) {\n    const currentDelay = firstDelayValue + (i - 1) * stepDelayValue; // zapisywanie delaya dla loga\n    createPromise(i, currentDelay);\n    createdPromiseCount++; // zwiekszenie licznika wykonanych funkcji\n\n    if (createdPromiseCount === amount) {\n      btn.removeAttribute('disabled');\n    }\n  }\n});\n"],"names":["$ce04d3a99e08e73b$var$firstDelay","document","querySelector","$ce04d3a99e08e73b$var$stepDelay","$ce04d3a99e08e73b$var$amountInput","$ce04d3a99e08e73b$var$btn","$ce04d3a99e08e73b$var$createPromise","position1","delay1","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","position","delay","then","param","console","log","concat","catch","addEventListener","event","preventDefault","setAttribute","firstDelayValue","Number","value","stepDelayValue","amount","createdPromiseCount","i","removeAttribute"],"version":3,"file":"03-promises.a33b0653.js.map"}