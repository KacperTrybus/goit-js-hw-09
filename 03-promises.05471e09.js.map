{"mappings":"AAAA,MAAMA,EAAaC,SAASC,cAAc,qBACpCC,EAAYF,SAASC,cAAc,oBACnCE,EAAcH,SAASC,cAAc,sBACrCG,EAAMJ,SAASC,cAAc,UAGnC,SAASI,EAAcC,EAAUC,GAC/B,MAAMC,EAAgBC,KAAKC,SAAW,GACtB,IAAIC,SAAQ,CAACC,EAASC,KAEpCC,YAAW,KACLN,EACFI,EAAQ,CAAEG,SAAAT,EAAUU,MAAAT,IAEpBM,EAAO,CAAEE,SAAAT,EAAUU,MAAAT,GAAQ,GAE5BA,EAAM,IAIRU,MAAK,EAACF,SAAEA,EAAQC,MAAEA,MAEjBE,QAAQC,IAAI,uBAAqBJ,QAAiBC,MAAU,IAE7DI,OAAM,EAACL,SAAEA,EAAQC,MAAEA,MAElBE,QAAQC,IAAI,sBAAoBJ,QAAeC,MAAU,G,CAtBlDhB,SAASC,cAAc,SA0B/BoB,iBAAiB,UAAU,SAAUC,GACxCA,EAAMC,iBACNnB,EAAIoB,aAAa,WAAY,IAELC,OAAO1B,EAAW2B,OACnBD,OAAOvB,EAAUwB,OADxC,MAEMC,EAASF,OAAOtB,EAAYuB,OAElC,IAAIE,EAAsB,EAE1B,IAAK,IAAIC,EAAI,EAAGA,GAAKF,EAAQE,IAAK,CAEhCxB,EAAcwB,EADO9B,GAAc8B,EAAI,GAAKC,MACbb,MAAK,KAClCW,IAEIA,IAAwBD,GAC1BI,aAAaC,gBAAgB,WAAW,G","sources":["src/js/03-promises.js"],"sourcesContent":["const firstDelay = document.querySelector('input[name=delay]');\nconst stepDelay = document.querySelector('input[name=step]');\nconst amountInput = document.querySelector('input[name=amount]');\nconst btn = document.querySelector('button');\nconst form = document.querySelector('.form');\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  const promise = new Promise((resolve, reject) => {\n    //nowy promise dla ktorego robi sie funkcja\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n\n  promise // wywoluje promise\n    .then(({ position, delay }) => {\n      //jak resolved\n      console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n    })\n    .catch(({ position, delay }) => {\n      // jak rejected\n      console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n    });\n}\n\nform.addEventListener('submit', function (event) {\n  event.preventDefault();\n  btn.setAttribute('disabled', '');\n\n  const firstDelayValue = Number(firstDelay.value);\n  const stepDelayValue = Number(stepDelay.value);\n  const amount = Number(amountInput.value);\n\n  let createdPromiseCount = 0;\n\n  for (let i = 1; i <= amount; i++) {\n    const currentDelay = firstDelay + (i - 1) * step; // zapisywanie delaya dla loga\n    createPromise(i, currentDelay).then(() => {\n      createdPromiseCount++; // zwiekszenie licznika wykonanych funkcji\n\n      if (createdPromiseCount === amount) {\n        submitButton.removeAttribute('disabled');\n      }\n    });\n  }\n});\n"],"names":["$47d4ff9957288465$var$firstDelay","document","querySelector","$47d4ff9957288465$var$stepDelay","$47d4ff9957288465$var$amountInput","$47d4ff9957288465$var$btn","$47d4ff9957288465$var$createPromise","position1","delay1","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","position","delay","then","console","log","catch","addEventListener","event","preventDefault","setAttribute","Number","value","amount","createdPromiseCount","i","step","submitButton","removeAttribute"],"version":3,"file":"03-promises.05471e09.js.map"}